; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %riscv32_cheri_llc -verify-machineinstrs -target-abi ilp32 < %s \
; RUN:   | FileCheck -check-prefix=RV32IXCHERI-ILP32 %s
; RUN: %riscv64_cheri_llc -verify-machineinstrs -target-abi lp64 < %s \
; RUN:   | FileCheck -check-prefix=RV64IXCHERI-LP64 %s

define void @test_spill_slot(i8 addrspace(200)** %ptr) nounwind {
; RV32IXCHERI-ILP32-LABEL: test_spill_slot:
; RV32IXCHERI-ILP32:       # %bb.0:
; RV32IXCHERI-ILP32-NEXT:    addi sp, sp, -112
; RV32IXCHERI-ILP32-NEXT:    sc cs0, 104(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs1, 96(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs2, 88(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs3, 80(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs4, 72(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs5, 64(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs6, 56(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs7, 48(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs8, 40(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs9, 32(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs10, 24(sp)
; RV32IXCHERI-ILP32-NEXT:    sc cs11, 16(sp)
; RV32IXCHERI-ILP32-NEXT:    sw a0, 4(sp)
; RV32IXCHERI-ILP32-NEXT:    lc ca1, 0(a0)
; RV32IXCHERI-ILP32-NEXT:    sc ca1, 8(sp)
; RV32IXCHERI-ILP32-NEXT:    #APP
; RV32IXCHERI-ILP32-NEXT:    nop
; RV32IXCHERI-ILP32-NEXT:    #NO_APP
; RV32IXCHERI-ILP32-NEXT:    lc ca0, 8(sp)
; RV32IXCHERI-ILP32-NEXT:    lw a1, 4(sp)
; RV32IXCHERI-ILP32-NEXT:    sc ca0, 0(a1)
; RV32IXCHERI-ILP32-NEXT:    lc cs11, 16(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs10, 24(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs9, 32(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs8, 40(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs7, 48(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs6, 56(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs5, 64(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs4, 72(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs3, 80(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs2, 88(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs1, 96(sp)
; RV32IXCHERI-ILP32-NEXT:    lc cs0, 104(sp)
; RV32IXCHERI-ILP32-NEXT:    addi sp, sp, 112
; RV32IXCHERI-ILP32-NEXT:    ret
;
; RV64IXCHERI-LP64-LABEL: test_spill_slot:
; RV64IXCHERI-LP64:       # %bb.0:
; RV64IXCHERI-LP64-NEXT:    addi sp, sp, -224
; RV64IXCHERI-LP64-NEXT:    sc cs0, 208(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs1, 192(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs2, 176(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs3, 160(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs4, 144(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs5, 128(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs6, 112(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs7, 96(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs8, 80(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs9, 64(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs10, 48(sp)
; RV64IXCHERI-LP64-NEXT:    sc cs11, 32(sp)
; RV64IXCHERI-LP64-NEXT:    sd a0, 8(sp)
; RV64IXCHERI-LP64-NEXT:    lc ca1, 0(a0)
; RV64IXCHERI-LP64-NEXT:    sc ca1, 16(sp)
; RV64IXCHERI-LP64-NEXT:    #APP
; RV64IXCHERI-LP64-NEXT:    nop
; RV64IXCHERI-LP64-NEXT:    #NO_APP
; RV64IXCHERI-LP64-NEXT:    lc ca0, 16(sp)
; RV64IXCHERI-LP64-NEXT:    ld a1, 8(sp)
; RV64IXCHERI-LP64-NEXT:    sc ca0, 0(a1)
; RV64IXCHERI-LP64-NEXT:    lc cs11, 32(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs10, 48(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs9, 64(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs8, 80(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs7, 96(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs6, 112(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs5, 128(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs4, 144(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs3, 160(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs2, 176(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs1, 192(sp)
; RV64IXCHERI-LP64-NEXT:    lc cs0, 208(sp)
; RV64IXCHERI-LP64-NEXT:    addi sp, sp, 224
; RV64IXCHERI-LP64-NEXT:    ret
  %a = load volatile i8 addrspace(200)*, i8 addrspace(200)** %ptr
  ; Clobber all non-reserved capability registers (ie all but cnull, cra, csp,
  ; cgp and ctp). Note that cfp may be not be reserved so we must clobber it.
  tail call void asm sideeffect "nop", "~{c5},~{c6},~{c7},~{c8},~{c9},~{c10},~{c11},~{c12},~{c13},~{c14},~{c15},~{c16},~{c17},~{c18},~{c19},~{c20},~{c21},~{c22},~{c23},~{c24},~{c25},~{c26},~{c27},~{c28},~{c29},~{c30},~{c31}"()
  store volatile i8 addrspace(200)* %a, i8 addrspace(200)** %ptr
  ret void
}
